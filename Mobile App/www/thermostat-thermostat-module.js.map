{"version":3,"sources":["webpack:///./src/app/thermostat/thermostat.module.ts","webpack:///./src/app/thermostat/thermostat.page.html","webpack:///./src/app/thermostat/thermostat.page.scss","webpack:///./src/app/thermostat/thermostat.page.ts"],"names":[],"mappings":"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","file":"thermostat-thermostat-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ThermostatPage } from './thermostat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ThermostatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ThermostatPage]\n})\nexport class ThermostatPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"tertiary\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <!-- <div class=\\\"light\\\" slot=\\\"end\\\"></div> -->\\n  </ion-toolbar>\\n  <!--\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"thermostat\\\">\\n    <ion-segment-button value=\\\"connection\\\">\\n      <ion-label>Connection</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"liveData\\\">\\n      <ion-label>Live Data</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"thermostat\\\">\\n      <ion-label>Thermostat</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"test\\\">\\n      <ion-label>Test</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  -->\\n</ion-header>\\n  \\n<ion-content>\\n  <br>\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n        <!--\\n        <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"fahrenheit\\\">\\n          <ion-segment-button value=\\\"fahrenheit\\\">\\n            <ion-label>Fahrenheit</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"celcius\\\">\\n            <ion-label>Celcius</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n        -->\\n\\n        <h4>Current Temperature</h4><br>\\n        <div class=\\\"sensorsDisplay\\\"><p>{{ getAmbTempStatus() }}</div><br>\\n        <br>\\n        <h4>Set Temperature To</h4><br>\\n        <div class=\\\"thermostatButtonsUp\\\">\\n          <ion-button shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"setTempDown()\\\">\\n            <ion-icon name=\\\"arrow-dropdown\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n        <div class=\\\"sensorsDisplayThermo\\\"><p>{{ getSetTemp() }}</div>\\n        <div class=\\\"thermostatButtonsDown\\\">\\n          <ion-button shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" class=\\\"shadow-red\\\" (click)=\\\"setTempUp()\\\">\\n            <ion-icon name=\\\"arrow-dropup\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n        <h4>Fan</h4><br>\\n        <!--\\n        <div class=\\\"fanHighLabel\\\">\\n            <p><b>High</b></p>\\n        </div>\\n        <ion-toggle class=\\\"fanToggle\\\" color=\\\"primary\\\"></ion-toggle>\\n        <div class=\\\"fanLowLabel\\\">\\n            <p><b>Low</b></p>\\n        </div>\\n        <br><br><br>\\n        <ion-button color=\\\"tertiary\\\" shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"powerOff()\\\">\\n          <ion-icon name=\\\"power\\\"></ion-icon>\\n        </ion-button>\\n        -->\\n        <div class=\\\"fanLowLabel\\\">\\n          <ion-list>\\n            <ion-radio-group (ionChange)=\\\"fanSelectionChanged($event)\\\" allow-empty-selection = “true” color=\\\"primary\\\">\\n              <ion-item>\\n                <ion-label><b>Cool On</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"coolOn\\\" checked></ion-radio>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label><b>Cool Off</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"coolOff\\\" checked></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n\\n            <br>\\n\\n            <ion-radio-group (ionChange)=\\\"fanSelectionChanged($event)\\\" allow-empty-selection = “true” color=\\\"primary\\\">\\n              <ion-item>\\n                <ion-label><b>Fan High</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"fanHigh\\\"></ion-radio>\\n              </ion-item>\\n          \\n              <ion-item>\\n                <ion-label><b>Fan Low</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"fanLow\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n\\n            <br>\\n\\n            <ion-radio-group (ionChange)=\\\"fanSelectionChanged($event)\\\" allow-empty-selection = “true” color=\\\"primary\\\">\\n              <ion-item>\\n                <ion-label><b>Power On</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"powerOn\\\"></ion-radio>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label><b>Power Off</b></ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"powerOff\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-list>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RoZXJtb3N0YXQvdGhlcm1vc3RhdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { BLE } from '@ionic-native/ble/ngx';\n\nimport { NgZone } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-thermostat',\n  templateUrl: './thermostat.page.html',\n  styleUrls: ['./thermostat.page.scss'],\n})\nexport class ThermostatPage implements OnInit {\n  on = 1;\n  off = 0;\n  category: string;\n  ambTemp: number;\n  setToTemp;\n  weeklyTemp: number;\n  tempUnit: string;\n  devices: any;\n  device: any;\n  statusMessage: string;\n  sensorData: Uint8Array;\n  data: number[] = [0, 0, 0, 0, 0, 1, 0];\n  prevData: number[] = [0, 0, 0, 0, 0, 0, 0];\n  zAxis: number;\n  fanSelection: string;\n\n  constructor(private navCtrl: NavController,\n              private route: ActivatedRoute,\n              private router: Router,\n              private ngZone: NgZone,\n              private toastCtrl: ToastController,\n              private ble: BLE,\n              public alertController: AlertController,\n              public storage: Storage\n              ) {\n  }\n\n  ngOnInit() {\n    // Or to get a key/value pair\n    this.storage.get('bleDevice').then((val) => {\n      console.log('Your age is', val);\n      const receivedObject = JSON.parse(val);\n      this.device = receivedObject;\n      console.log('Received this Object: ' + this.device);\n      console.log('Type of OBJ is ' + typeof(this.device));\n      console.log('Device name passed is: ' + this.device.name);\n      this.onRead(this.device);\n      console.log('Ambtemp is: ' + this.ambTemp);\n      this.setToTemp = this.ambTemp;\n    });\n\n    this.storage.get('ambTemp').then((val) => {\n      this.ambTemp = val;\n      this.setToTemp = val;\n      this.data[4] = val;\n      console.log('Value is: ' + val);\n    });\n\n    this.data[6] = 0;\n\n    console.log('Initial Data is: ' + this.data);\n    this.wait(200);\n  }\n\n  ionViewWillLeave() {\n  }\n\n  onRead(device) {\n    // Update the UI with the current state of the switch characteristic\n    this.ble.read(device.id, 'D0AF', '7B53').then(\n      buffer => {\n        const data = new Uint8Array(buffer) as Uint8Array;\n        const lastToCopy = data.length - 1;\n        this.ngZone.run(() => {\n            this.ambTemp = data[4];\n            console.log('switch characteristic ' + data[4]);\n            console.log('Got ' + data);\n            console.log('Set AmbTemp to: ' + this.ambTemp);\n        });\n      }\n    );\n  }\n\n  onWrite() {\n    console.log('onRead');\n    const buffer = new Uint8Array(this.data).buffer as ArrayBuffer;\n    console.log('Data is: ' + this.data[0]);\n    console.log('Type is: ' + typeof(buffer));\n    console.log('The whole array is: ' + this.data);\n    this.ble.write(this.device.id, 'D0AF', '7B53', buffer).then(\n      () => this.setStatus('Light is ' + (this.data[0] ? 'on' : 'off')),\n      e => this.presentAlert('Unexpected Error', 'Error updating power switch')\n    );\n  }\n\n  getAmbTempStatus() {\n    return this.ambTemp;\n  }\n\n  getSetTemp() {\n    if (this.category === 'celcius') {\n      return (this.setToTemp - 32) * (5 / 9);\n    } else {\n      return this.setToTemp - 64;\n    }\n  }\n\n  async presentAlert(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      subHeader: 'Subtitle',\n      message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  setStatus(message) {\n    console.log(message);\n    this.ngZone.run(() => {\n      this.statusMessage = message;\n    });\n  }\n\n  setTempUp() {\n    this.setToTemp += 1;\n    this.data[3] = this.setToTemp;\n    this.onWrite();\n    this.onRead(this.device);\n  }\n\n  setTempDown() {\n    this.setToTemp -= 1;\n    this.data[3] = this.setToTemp;\n    this.onWrite();\n    this.onRead(this.device);\n  }\n\n  powerOff() {\n  }\n\n  wait(ms) {\n    const start = new Date().getTime();\n    let end = start;\n    while (end < start + ms) {\n      end = new Date().getTime();\n   }\n  }\n\n fanSelectionChanged(event) {\n   this.fanSelection = event.detail.value;\n   const last = this.data.length - 1;\n   console.log('Event is: ' + event + '\\n');\n   console.log('Value is: ' + this.fanSelection);\n\n   switch (this.fanSelection) {\n    case 'coolOn':\n        this.data[0] = this.on;\n        console.log('Cool On data is: ' + this.data[0]);\n        break;\n    case 'coolOff':\n        this.data[0] = this.off;\n        break;\n    case 'fanHigh':\n        this.data[1] = this.off;\n        this.data[2] = this.on;\n        break;\n    case 'fanLow':\n        this.data[2] = this.off;\n        this.data[1] = this.on;\n        break;\n    case 'powerOn':\n        this.data[5] = this.on;\n        break;\n    case 'powerOff':\n        // this.prevData = this.data.slice(0, last);\n        this.data[5] = this.off;\n        break;\n    default:\n      console.log('Error with the radio buttons\\n');\n   }\n\n   this.onWrite();\n   this.onRead(this.device);\n  }\n}\n"],"sourceRoot":""}