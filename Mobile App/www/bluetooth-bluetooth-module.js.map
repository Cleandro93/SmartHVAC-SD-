{"version":3,"sources":["webpack:///./src/app/bluetooth/bluetooth.module.ts","webpack:///./src/app/bluetooth/bluetooth.page.html","webpack:///./src/app/bluetooth/bluetooth.page.scss","webpack:///./src/app/bluetooth/bluetooth.page.ts"],"names":[],"mappings":"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","file":"bluetooth-bluetooth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BluetoothPage } from './bluetooth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BluetoothPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BluetoothPage]\n})\nexport class BluetoothPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"tertiary\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <!-- <div class=\\\"light\\\" slot=\\\"end\\\"></div> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n        <br><br><br>\\n        <img style=\\\"border:3px solid midnightblue ;\\\" src=\\\"../assets/rv1.png\\\" align=\\\"center\\\" width=\\\"250\\\" height=\\\"100\\\"/>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <br><br>\\n\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n        <ion-button shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"scan()\\\">Search</ion-button><br><br>\\n        <ion-button color=\\\"tertiary\\\" shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"presentAlertConfirm()\\\">Status</ion-button>\\n        <br><br><br>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-grid>\\n      <ion-row center>\\n        <ion-col text-center>\\n          <div class=bleDevices>\\n            <ion-list>\\n              <button ion-item *ngFor=\\\"let device of devices\\\" (click)=\\\"deviceSelected(device.id, device)\\\" >\\n              <h2 > {{device.name || 'Unnamed' }} </h2>\\n              <p>{{device.id}}</p>\\n              </button>\\n            </ion-list>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n</ion-content>\\n\\n<!--\\n<ion-footer>\\n  <ion-toolbar>\\n    <p>{{ statusMessage }}</p>\\n  </ion-toolbar>\\n</ion-footer>\\n-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JsdWV0b290aC9ibHVldG9vdGgucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { NavController, ToastController, Events, AlertController} from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { BleService } from '../services/ble.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-bluetooth',\n  templateUrl: './bluetooth.page.html',\n  styleUrls: ['./bluetooth.page.scss'],\n})\nexport class BluetoothPage implements OnInit {\n\n  devices: any[] = [];\n  statusMessage: string;\n  adv: Uint8Array;\n\n  constructor(private navCtrl: NavController,\n              private router: Router,\n              private toastCtrl: ToastController,\n              private ble: BLE,\n              private ngZone: NgZone,\n              private bleService: BleService,\n              public alertController: AlertController,\n              public events: Events,\n              public storage: Storage) {\n  }\n\n  ngOnInit() {\n    console.log('ionViewDidEnter');\n  }\n\n  scan() {\n    this.setStatus('Scanning for Bluetooth LE Devices');\n    this.devices = [];  // clear list\n\n    this.ble.scan(['D0AF'], 5).subscribe(\n      device => this.onDeviceDiscovered(device),\n      error => this.scanError(error)\n    );\n\n    // setTimeout(this.setStatus.bind(this), 10000, 'Scan complete');\n  }\n\n  onDeviceDiscovered(device) {\n    console.log('Discovered ' + JSON.stringify(device, null, 2));\n    this.ngZone.run(() => {\n      this.devices.push(device);\n      const mfgData = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n      this.adv = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n      console.log(' Name is ' + device.name + ' Manufacturer Data is', mfgData);\n    });\n  }\n\n  // If location permission is denied, you'll end up here\n  async scanError(error) {\n    this.setStatus('Error ' + error);\n    const toast = await this.toastCtrl.create({\n      message: 'Error scanning for Bluetooth low energy devices',\n      position: 'middle',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  setStatus(message) {\n    console.log(message);\n    this.ngZone.run(() => {\n      this.statusMessage = message;\n    });\n  }\n\n  deviceSelected(id, device) {\n    console.log(JSON.stringify(device) + ' selected');\n    this.bleService.setDevice(device);\n    this.ble.stopScan();\n    this.router.navigateByUrl('/device-details/'+id);\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: 'SmartRVAC Status',\n      message: this.statusMessage,\n      buttons: [\n        {\n          text: 'OK',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }\n      ]\n    });\n  }\n\n}\n"],"sourceRoot":""}