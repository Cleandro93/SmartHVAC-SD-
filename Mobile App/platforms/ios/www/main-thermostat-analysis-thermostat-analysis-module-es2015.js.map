{"version":3,"sources":["./src/app/main/thermostat-analysis/thermostat-analysis.page.html","./src/app/main/thermostat-analysis/thermostat-analysis.module.ts","./src/app/main/thermostat-analysis/thermostat-analysis.page.scss","./src/app/main/thermostat-analysis/thermostat-analysis.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0qBAA0qB,sBAAsB,4FAA4F,gBAAgB,2pE;;;;;;;;;;;;;;;;;;;;;;ACAnwB;AACM;AACF;AACU;AAEV;AAEuB;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AAWF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IATxC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,gFAAsB,CAAC;KACvC,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;ACzBzC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACH;AAO5C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAS/B,YAAoB,OAAsB,EAAU,GAAQ;QAAxC,YAAO,GAAP,OAAO,CAAe;QAAU,QAAG,GAAH,GAAG,CAAK;QAN5D,cAAS,GAAG,EAAE,CAAC;IAMiD,CAAC;IAEjE,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,EAAO;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,kBAAkB;IACpB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACtC;aAAM;YACL,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;IACH,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;IACH,CAAC;IAED,SAAS;QACP,yCAAyC;QACzC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,WAAW;QACT,yCAAyC;QACzC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,QAAQ;IAER,CAAC;CAaJ;;YArDgC,4DAAa;YAAe,yDAAG;;AATnD,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,sLAA8C;;KAE/C,CAAC;2EAU+B,4DAAa,EAAe,yDAAG;GATnD,sBAAsB,CA8DlC;AA9DkC","file":"main-thermostat-analysis-thermostat-analysis-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Thermostat Analysis</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <br>\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n          <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"fahrenheit\\\">\\n            <ion-segment-button value=\\\"fahrenheit\\\">\\n              <ion-label>Fahrenheit</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"celcius\\\">\\n              <ion-label>Celcius</ion-label>\\n            </ion-segment-button>\\n        </ion-segment>\\n        <h4>Ambient Temperature</h4>\\n        <div class=\\\"sensorsDisplay\\\"><p>{{ getAmbTempStatus() }}</div><br>\\n        <h4>Set Temperature To</h4>\\n        <div class=\\\"sensorsDisplay\\\"><p>{{ getSetTemp() }}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid>\\n    <ion-row center>\\n      <ion-col text-center>\\n        <div class=\\\"signalStatus\\\">\\n              <div class=\\\"signalDisplay\\\"><p>R</div><br><br><br>\\n              <div class=\\\"signalDisplay\\\"><p>Y</div><br><br><br>\\n              <div class=\\\"signalDisplay\\\"><p>GH</div><br><br><br>\\n              <div class=\\\"signalDisplay\\\"><p>GL</div><br><br><br>\\n              <div class=\\\"signalDisplay\\\"><p>W</div><br><br><br>\\n              <div class=\\\"signalDisplay\\\"><p>B</div>\\n        </div>\\n        <div class=\\\"thermostatButtons\\\">\\n            <br><br><br><br><br>\\n            <ion-button shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" class=\\\"shadow-red\\\" (click)=\\\"setTempUp()\\\">\\n              <ion-icon name=\\\"arrow-dropup\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"setTempDown()\\\">\\n              <ion-icon name=\\\"arrow-dropdown\\\"></ion-icon>\\n            </ion-button><br><br>\\n            <ion-button color=\\\"tertiary\\\" shape=\\\"round\\\" size=\\\"large\\\" expland=\\\"block\\\" (click)=\\\"powerOff()\\\">\\n              <ion-icon name=\\\"power\\\"></ion-icon>\\n            </ion-button>\\n        </div>\\n        <div class=\\\"signalControl\\\">\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n          <ion-toggle class=\\\"signalsToggles\\\" color=\\\"primary\\\"></ion-toggle><br><br><br>\\n        </div>\\n        <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\\n        <ion-button shape=\\\"round\\\" size=\\\"default\\\" expland=\\\"block\\\">\\n          <ion-back-button color=\\\"tertiary\\\" defaultHref=\\\"/main\\\"></ion-back-button>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ThermostatAnalysisPage } from './thermostat-analysis.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ThermostatAnalysisPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ThermostatAnalysisPage]\n})\nexport class ThermostatAnalysisPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vdGhlcm1vc3RhdC1hbmFseXNpcy90aGVybW9zdGF0LWFuYWx5c2lzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { BLE } from '@ionic-native/ble/ngx';\n\n@Component({\n  selector: 'app-thermostat-analysis',\n  templateUrl: './thermostat-analysis.page.html',\n  styleUrls: ['./thermostat-analysis.page.scss'],\n})\nexport class ThermostatAnalysisPage implements OnInit {\n  category: string;\n    ambTemp: number;\n    setToTemp = 72;\n    weeklyTemp: number;\n    tempUnit: string;\n    devices: any[];\n    statusMessage: string;\n\n    constructor(private navCtrl: NavController, private ble: BLE) { }\n\n    ngOnInit() {\n    }\n\n    segmentChanged(ev: any) {\n      this.category = ev.detail.value;\n      //console.log(ev);\n    }\n\n    getAmbTempStatus() {\n      this.ambTemp = 72;\n\n      if (this.category === 'celcius') {\n        return (this.ambTemp - 32) * (5 / 9);\n      } else {\n        return this.ambTemp;\n      }\n    }\n\n    getSetTemp() {\n      if (this.category === 'celcius') {\n        return (this.setToTemp - 32) * (5 / 9);\n      } else {\n        return this.setToTemp;\n      }\n    }\n\n    setTempUp() {\n      // console.log(\"Tried to Increase Temp\");\n      this.setToTemp += 1;\n    }\n\n    setTempDown() {\n      // console.log(\"Tried to Increase Temp\");\n      this.setToTemp -= 1;\n    }\n\n    powerOff() {\n\n    }\n    /*\n    scan(){\n      this.setStatus(‘Scanning for BLE devices...‘);\n      this.devices = [];\n\n      this.ble.scan([‘ff10’], 5, ).subscribe(\n        device => this.onDeviceDiscovered(device)\n      );\n      setTimeout(this.setStatus.bind(this),500,’Scan complete’);\n    }\n    */\n    //setStatus and onDevicesDiscovered need to be written\n}\n"],"sourceRoot":""}