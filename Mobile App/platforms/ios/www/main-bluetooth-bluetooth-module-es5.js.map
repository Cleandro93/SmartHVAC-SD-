{"version":3,"sources":["./src/app/main/bluetooth/bluetooth.page.html","./src/app/main/bluetooth/bluetooth.module.ts","./src/app/main/bluetooth/bluetooth.page.scss","./src/app/main/bluetooth/bluetooth.page.ts"],"names":[],"mappings":"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","file":"main-bluetooth-bluetooth-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button slot=\\\"start\\\" defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Bluetooth</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button slot=\\\"end\\\" (click)=\\\"scan()\\\">Scan</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!--  These -->\\n  <ion-list>\\n    <button ion-item *ngFor=\\\"let device of devices; id as i\\\" (click)=\\\"deviceSelected(id, device)\\\" >\\n      <h2>{{device.name || 'Unnamed' }}</h2>\\n      <p>{{device.id}}</p>\\n      <p>RSSI: {{device.rssi}}</p>\\n      <p> ADV: {{device.advertising.kCBAdvDataManufacturerData}}</p>\\n      <p *ngFor=\\\"let data of adv\\\"> {{data}}</p>\\n    </button>\\n   </ion-list>\\n  <!-- -->\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <p>{{ statusMessage }}</p>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BluetoothPage } from './bluetooth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BluetoothPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BluetoothPage]\n})\nexport class BluetoothPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYmx1ZXRvb3RoL2JsdWV0b290aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { NavController, ToastController} from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { BleService } from '../services/ble.service';\n\n@Component({\n  selector: 'app-bluetooth',\n  templateUrl: './bluetooth.page.html',\n  styleUrls: ['./bluetooth.page.scss'],\n})\nexport class BluetoothPage implements OnInit {\n\n  devices: any[] = [];\n  statusMessage:String;\n  adv:Uint8Array;\n\n  constructor(private router: Router,\n  private toastCtrl: ToastController,\nprivate ble:BLE,\nprivate ngZone: NgZone,\nprivate bleService: BleService) { }\n\n  ngOnInit() {\n    console.log('ionViewDidEnter');\n    this.scan();\n\n  }\n\n\n  /*ionViewDidEnter() {\n    console.log('ionViewDidEnter');\n    this.scan();\n  }*/\n\n  scan() {\n    this.setStatus('Scanning for Bluetooth LE Devices');\n    this.devices = [];  // clear list\n\n    this.ble.scan([], 10).subscribe(\n      device => this.onDeviceDiscovered(device),\n      error => this.scanError(error)\n    );\n\n    setTimeout(this.setStatus.bind(this), 10000, 'Scan complete');\n  }\n\n  onDeviceDiscovered(device) {\n    console.log('Discovered ' + JSON.stringify(device, null, 2));\n    this.ngZone.run(() => {\n      this.devices.push(device);\n      //if (device.name == 'RVACSD' && device.advertising.kCBAdvDataManufacturerData) {\n       const mfgData = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n       this.adv = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n       console.log(' Name is '+device.name+' Manufacturer Data is', mfgData);//mfgData);\n//  }\n    });\n  }\n\n  // If location permission is denied, you'll end up here\n  async scanError(error) {\n    this.setStatus('Error ' + error);\n    const toast = await this.toastCtrl.create({\n      message: 'Error scanning for Bluetooth low energy devices',\n      position: 'middle',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  setStatus(message) {\n    console.log(message);\n    this.ngZone.run(() => {\n      this.statusMessage = message;\n    });\n  }\n\n  deviceSelected(id, device) {\n    console.log(JSON.stringify(device) + ' selected');\n    this.bleService.setDevice(device);\n    this.router.navigateByUrl('/device-details/'+id);\n\n  }\n\n}\n"],"sourceRoot":""}