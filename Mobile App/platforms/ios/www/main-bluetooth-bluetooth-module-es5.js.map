{"version":3,"sources":["./src/app/main/bluetooth/bluetooth.page.html","./src/app/main/bluetooth/bluetooth.module.ts","./src/app/main/bluetooth/bluetooth.page.scss","./src/app/main/bluetooth/bluetooth.page.ts"],"names":[],"mappings":"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","file":"main-bluetooth-bluetooth-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button slot=\\\"start\\\" defaultHref=\\\"main\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Bluetooth</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button slot=\\\"end\\\" (click)=\\\"scan()\\\">Scan</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!--  These -->\\n  <ion-list>\\n    <button ion-item *ngFor=\\\"let device of devices; id as i\\\" (click)=\\\"deviceSelected(id, device)\\\" >\\n    <h2>{{device.name || 'Unnamed' }}</h2>\\n    <p>{{device.id}}</p>\\n    <p>RSSI: {{device.rssi}}</p>\\n    <p> ADV: {{device.advertising.kCBAdvDataManufacturerData}}</p>\\n    <p *ngFor=\\\"let data of adv\\\"> {{data}}</p>\\n    </button>\\n   </ion-list>\\n  \\n  <!--  These \\n  <div class=\\\"ion-padding\\\">\\n    <ion-button (click)=\\\"presentAlertConfirm()\\\">Confirm</ion-button>\\n  </div>\\n  -->\\n  \\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <p>{{ statusMessage }}</p>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BluetoothPage } from './bluetooth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BluetoothPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BluetoothPage]\n})\nexport class BluetoothPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYmx1ZXRvb3RoL2JsdWV0b290aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { NavController, ToastController} from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { BleService } from '../services/ble.service';\n\n@Component({\n  selector: 'app-bluetooth',\n  templateUrl: './bluetooth.page.html',\n  styleUrls: ['./bluetooth.page.scss'],\n})\nexport class BluetoothPage implements OnInit {\n\n  devices: any[] = [];\n  statusMessage:String;\n  adv:Uint8Array;\n\n  constructor(private router: Router,\n    private toastCtrl: ToastController,\n    private ble:BLE,\n    private ngZone: NgZone,\n    private bleService: BleService,\n    public alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n    console.log('ionViewDidEnter');\n    this.scan();\n  }\n\n  /*ionViewDidEnter() {\n    console.log('ionViewDidEnter');\n    this.scan();\n  }*/\n\n  scan() {\n    this.setStatus('Scanning for  SmartHVAC Devices');\n    this.devices = [];  // clear list\n\n    this.ble.scan(['D0AF'], 10).subscribe(\n      device => this.onDeviceDiscovered(device),\n      error => this.scanError(error)\n    );\n\n    setTimeout(this.setStatus.bind(this), 10000, 'Scan complete');\n  }\n\n  onDeviceDiscovered(device) {\n    // console.log('Discovered ' + JSON.stringify(device, null, 2));\n    // this.presentAlertConfirm('Discovered ' + JSON.stringify(device, null, 2));\n    this.ngZone.run(() => {\n      console.log(' Name is ' + device.name);\n      // if (device.name.includes(\"RVACSD \")) {\n      this.devices.push(device);\n      const mfgData = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n      this.adv = new Uint8Array(device.advertising.kCBAdvDataManufacturerData);\n      console.log(' Name is ' + device.name + ' Manufacturer Data is', mfgData);\n      // } else {\n      console.log('Cannot Put\\n');\n      // }\n    });\n  }\n\n  // If location permission is denied, you'll end up here\n  async scanError(error) {\n    this.setStatus('Error ' + error);\n    const toast = await this.toastCtrl.create({\n      message: 'Cannot Find SmartHAC Device',\n      position: 'middle',\n      duration: 20000\n    });\n    toast.present();\n  }\n\n  setStatus(message) {\n    console.log(message);\n    this.ngZone.run(() => {\n      this.statusMessage = message;\n    });\n  }\n\n  deviceSelected(id, device) {\n    console.log(JSON.stringify(device) + ' selected');\n    this.bleService.setDevice(device);\n    this.router.navigateByUrl('/device-details' + id);\n  }\n\n  async showToast(msj) {\n    const toast = await this.toastCtrl.create({\n      message: msj,\n      duration: 1000\n    });\n    await toast.present();\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: '',\n      message: '',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            console.log('Confirm Okay');\n          }\n        }\n      ]\n    });\n    //for (let i = 0; i < this.devices.length; i ++) {\n    /*for (const device of this.devices) {\n      alert.message.concat('\\n' + (device.name || 'Unnamed') );\n    }\n    */\n    await alert.present();\n    let result = await alert.onDidDismiss();\n    console.log(result);\n  }\n\n}\n"],"sourceRoot":""}